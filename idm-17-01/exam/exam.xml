<?xml version="1.0"?>
<?xml-stylesheet href="exam.xsl" type="text/xsl"?>
<exam>
	<question>
		<author>
			Бедретдинова Анна Юрьевна
		</author>		
		
		
		<qtext>
			Какой протокол используется на канальном уровне?
		</qtext>
		
		
		<ranswer>
			Ethernet
		</ranswer>
		
		
		<answer>
			TCP
		</answer>
		
		
		<answer>
			HTTP
		</answer>
		
		
		<answer>
			IP
		</answer>
		
		
		<proofrlink>
			https://ru.wikipedia.org/wiki/%D0%A1%D0%B5%D1%82%D0%B5%D0%B2%D0%B0%D1%8F_%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8C_OSI
		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Bedretdinova/index.html
		</plink>
	</question>

	<question>
		<author>
			Бирюков Сергей Сергеевич
		</author>		
		
		
		<qtext>
			Сопоставьте название протокола c его определением:
			<table border="1">
                        <tbody><tr><th>Название</th><th>Определение</th></tr>
                        <tr><td>A. HTTP</td><td>1. Протокол удаленного доступа</td></tr>
                        <tr><td>B. FTP</td><td>2. Протокол передачи файлов с файлового сервера на компьютер пользователя</td></tr>
                        <tr><td>C. SMTP</td><td>3. Протокол передачи гипертекста</td></tr>
                        <tr><td>D. TELNET</td><td>4. Протокол, который задает набор правил для передачи почты </td></tr>
                    </tbody></table>
		</qtext>
		
		
		<ranswer>
			A- 3, B-2, C- 4, D-1
		</ranswer>
		
		
		<proofrlink>
			https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D1%82%D0%BE%D0%BA%D0%BE%D0%BB_%D0%BF%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B8_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85
		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Biryukov/index.html
		</plink>
	</question>
	
	<question>
		<author>
			Брагин Дмитрий Александрович
		</author>		
		
		
		<qtext>
			Какое средство из нижеперечисленных можно использовать в среде Microsoft Visual Studio для создания веб-приложений?
		</qtext>
		
		
		<ranswer>
			ASP.NET (Active Server Pages .NET)
		</ranswer>
		
		
		<answer>
			Xamarin
		</answer>
		
		
		<answer>
			TFS (Team Foundation Server)
		</answer>
		
		
		<answer>
			LINQ (Language Integrated Query)
		</answer>
		
		
		<proofrlink>
			https://msdn.microsoft.com/ru-ru/library/dd566231.aspx
		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Bragin/mypage.html
		</plink>
		
		
		<acomment>
			Xamarin - средства кроссплатформенной разработки в VS. 
TFS - Team Foundation Server - комплексное решение для удобной работы с проектами нескольких пользователей. 
LINQ - Language Integrated Query - технология по добавлению синтаксиса языка запросов, напоминающего SQL, в языки программирования платформы .NET Framework, на языках C# и VB.NET 
ASP.NET - технология создания веб-приложений и веб-сервисов от компании Майкрософт. Visual Studio поддерживает возможность создания веб приложений с помощью фреймворков ASP.NET 4 или более современного ASP.NET Core.
		</acomment>
	</question>
	
		<question>
		<author>
			Верещагин Владимир Геннадьевич
		</author>		
		
		
		<qtext>
			Установите соответствие
			
			<table border="0,5" >
				<tbody>
					<tr align="left"><th>1) Мост</th></tr>
					<tr align="left"><th>2) Маршрутизатор</th></tr>
					<tr align="left"><th>3) Шлюз</th></tr>
				</tbody>
			</table>
			<table border="0.5">
				<tbody>
					<tr align="left"><th>A) устройство, соединяющее сети разного типа, но использующее одну операционную систему</th></tr>
					<tr align="left"><th>B) устройство, соединяющее две сети, использующие одинаковые методы передачи данных</th></tr>
					<tr align="left"><th>C) устройство, позволяющее организовать обмен данными между двумя сетями, использующими различные протоколы взаимодействия</th></tr>
				</tbody>
			</table>
		</qtext>
		
		
		<ranswer>
			<table >
				<tbody>
					<tr align="left"><th>1 - B | Мост - устройство, соединяющее две сети, использующие одинаковые методы передачи данных</th></tr>
					<tr align="left"><th>2 - A | Маршрутизатор - устройство, соединяющее сети разного типа, но использующее одну операционную систему</th></tr>
					<tr align="left"><th>3 - C | Шлюз - устройство, позволяющее организовать обмен данными между двумя сетями, использующими различные протоколы взаимодействия</th></tr>
				</tbody>
			</table>
		</ranswer>
				
		
		<proofrlink>
		
		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Vereshchagin/index.html#four
		</plink>
		
	</question>
	
	<question>
		<author>
			Зайцев Александр Сергеевич
		</author>		
		
		
		<qtext>
			В разработке продуктов средство канбан это:
		</qtext>
		
		
		<ranswer>
			Метод управления разработкой, реализующий принцип "точно в срок" и способствующий равномерному распределению нагрузки между работниками. При данном подходе весь процесс разработки прозрачен для всех членов команды.
		</ranswer>
		
		
		<answer>
			Практика разработки программного обеспечения, которая заключается в слиянии рабочих копий в общую основную ветвь разработки несколько раз в день и выполнения частых автоматизированных сборок проекта для скорейшего выявления и решения интеграционных проблем.
		</answer>
		
		
		<answer>
			Подход к разработке программного обеспечения, ориентированный на использование итеративной разработки, динамического формирования требований и обеспечения их реализации в результате постоянного взаимодействия внутри самоорганизующихся рабочих групп, состоящих из специалистов различного профиля.
		</answer>
		
		
		<answer>
			Набор принципов, на которых строится процесс разработки, позволяющий в жёстко фиксированные и небольшие по времени итерации, называемые спринтами , предоставлять конечному пользователю работающее ПО с новыми возможностями, для которых определён наибольший приоритет. Возможности ПО к реализации в очередном спринте определяются в начале спринта на этапе планирования и не могут изменяться на всём его протяжении. При этом строго фиксированная небольшая длительность спринта придаёт процессу разработки предсказуемость и гибкость.
		</answer>
				
		
		<proofrlink>
			https://yadi.sk/d/evI_RRva3Mab5W
		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Zaytsev/index.html#4lab
		</plink>
		
	</question>
	
	<question>
		<author>
			Зудилов Андрей Александрович
		</author>		
		
		
		<qtext>
			Протокол передачи данных – это:
		</qtext>
		
		
		<ranswer>
			Необходимые соглашения об эффективной связи между различными звеньями сети, реализованные в виде библиотек процедур, соответствующих уровню обработки сообщения
		</ranswer>
		
		
		<answer>
			Необходимые соглашения между пользователями компьютерной сети для обмена данными
		</answer>
		
		
		<answer>
			Программы, для просмотра Web-страниц глобальной сети Internet
		</answer>
				
		
		<proofrlink>
			https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D1%82%D0%BE%D0%BA%D0%BE%D0%BB_%D0%BF%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D1%87%D0%B8_%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85
		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/zudilov/index.html
		</plink>
		
	</question>
	
	<question>
		<author>
			Кузьменко Иван Алексеевич
		</author>		
		
		
		<qtext>
			Выпишите в ответе пары соответствий ТОЛЬКО между языками разметки web-страниц и их описаниями.
			<table>
											<tbody><tr>
												<th>
													<ol type="1">
														<li>Svg</li>
														<li>JavaScript</li>
														<li>HTML</li>
														<li>CSS</li>
														<li>jQuery</li>
														<li>XML</li>
														<li>JSON</li>
														<li>PHP</li>
														<li>Python</li>
														<li>DOM</li>
													</ol>													
												</th>
												<td>
													<ol type="A">
														<li>Формальный язык описания внешнего вида документа, написанного с использованием языка разметки</li>
														<li>Скриптовый язык общего назначения, интенсивно применяемый для разработки веб-приложений, особенно серверной части приложений</li>
														<li>Текстовый формат обмена данными, основанный на JavaScript</li>
														<li>Независящий от платформы и языка программный интерфейс, позволяющий программам и скриптам получить доступ к содержимому документов, а также изменять содержимое, структуру и оформление таких документов</li>
														<li>Язык разметки масштабируемой векторной графики</li>		
														<li>Высокоуровневый язык программирования общего назначения, ориентированный на повышение производительности разработчика и читаемости кода с минималистичным синтаксисом</li>
														<li>Стандартный язык разметки</li>
														<li>Библиотека JavaScript, фокусирующаяся на взаимодействии JavaScript и HTML</li>
														<li>Расширяемый язык разметки</li>
														<li>Мультипарадигменный язык программирования. Поддерживает объектно-ориентированный, императивный и функциональный стили. Является реализацией языка ECMAScript</li>
													</ol>
												</td>
											</tr>				
										</tbody></table>
		</qtext>
		
		
		<ranswer>
			Правильный ответ:
			1-E, 3-G, 4-A, 6-I.
			
			Полный список пар соответствий:
			1-E, 2-J, 3-G, 4-J, 5-H, 6-I, 7-C, 8-B, 9-F, 10-A.
		</ranswer>
				
		
		<proofrlink>

		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Kuzmenko/index.html
		</plink>
		
		
		<acomment>
			Относительно легкое задание, но, учитывая наличие не только языков разметки, но и языков программирования (Python, JS), скриптов (PHP), программного интерфейса (DOM), библиотеки JavaScript (jQuery) и формата обмена данными (JSON), может вызвать трудности, хоть и небольшие. 
			Для повышения сложности рекомендуется сопоставить соответствие между всеми элементами.
		</acomment>
	</question>
	
	<question>
		<author>
			Махмутов Илья Шамилевич
		</author>		
		
		
		<qtext>
			Сопоставьте сетевые термины и их определения.
			<table border="1">
                               <tbody><tr ><th>Термин</th><th>Определение</th>
                               </tr><tr ><th>1. Пакет </th><th>A. набор правил и стандартов, которые определяют команды и способ коммуникации между устройствами </th></tr>
                               <tr ><th>2. Сетевой интерфейс </th><th>B. это виртуальная частная сеть, с помощью нее можно объединить несколько локальных сетей через сеть интернет</th></tr>
                               <tr ><th>3. LAN</th><th>C. это адрес на компьютере, который связан с определенной программой. Это не сетевой интерфейс и не местоположение</th></tr>
                               <tr ><th>4. WAN</th><th>D. это механизм в сетях TCP/IP, позволяющий преобразовывать IP-адреса транзитных пакетов</th></tr>
                               <tr ><th>5. Протокол</th><th>E. это программное обеспечение, которое контролирует все сетевые пакеты, проходящие через компьютер</th></tr>
                               <tr ><th>6. Порт</th><th>F. это ваша локальная сеть, к ней подключены только ваши компьютеры и больше никто не имеет к ней доступа</th></tr>
                               <tr ><th>7. Брандмауэр</th><th>G. это основной структурный блок данных в сети, в котором находится информация о данных, пункте назначения, отправителе, строке жизни пакета, времени отправки и т.д.</th></tr>
                               <tr ><th>8. NAT</th><th>H. это глобальная сеть интернет, обычно этот термин применяется для обозначения всей сети интернет, также этот термин может относиться к сетевому интерфейсу</th></tr>
                               <tr ><th>9. VPN</th><th>I. это физическое или виртуальное устройство, которое позволяет компьютеру подключиться к сети</th></tr>
                             </tbody></table>
		</qtext>
		
		
		<ranswer>
			1.G 2.I 3.F 4.H 5.A 6.C 7.E 8.D 9.B
		</ranswer>
				
		
		<proofrlink>

		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Mahmutov/HTML/index.html
		</plink>
		
		
		<acomment>
			<ol>
				<li>Пакет —  это основной структурный блок данных в сети. Все данные передаются в виде пакетов, большие данные разделяются на небольшие пакеты, фиксированного размера. В каждом пакете есть заголовок, в котором находится информация о данных, пункте назначения, отправителе, строке жизни пакета, времени отправки и т д;</li>

				<li>Сетевой интерфейс — это физическое или виртуальное устройство, которое позволяет компьютеру подключиться к сети. Если у вас есть две сетевые карты на компьютере, то вы можете настроить сетевой интерфейс для каждой из них. Также сетевой интерфейс может быть виртуальным, например, локальный интерфейс lo;</li>

				<li>LAN — это ваша локальная сеть, к ней подключены только ваши компьютеры и больше никто не имеет к ней доступа. Это может быть ваша домашняя или офисная сеть;</li>

				<li>WAN — это глобальная сеть интернет, обычно этот термин применяется для обозначения всей сети интернет, также этот термин может относиться к сетевому интерфейсу;</li>
				<li>Протокол — набор правил и стандартов, которые определяют команды и способ коммуникации между устройствами. Существует множество протоколов и мы их рассмотрим ниже. Самые популярные из них — это TCP, UDP, IP и ICMP, также есть протоколы сети интернет более высокого уровня, например, HTTP и FTP;</li>
				<li>Порт — это адрес на компьютере, который связан с определенной программой. Это не сетевой интерфейс и не местоположение. С помощью портов программы могут общаться между собой;</li>
				<li>Брандмауэр — это программное обеспечение, которое контролирует все сетевые пакеты, проходящие через компьютер. Проходящие пакеты обрабатываются на основе правил, созданных пользователем. Также брандмауэр может закрывать определенные порты, чтобы сделать работу компьютера более безопасной;</li>
				<li>NAT -это служба преобразования сетевых адресов между локальной и глобальной сетью. Количество свободных сетевых адресов в сети уменьшается, поэтому необходимо найти решение, и решением стало создания локальных сетей, где несколько компьютеров могут иметь один IP адрес. Все пакеты приходят на роутер, а он уже потом с помощью NAT распределяет их между компьютерами.</li>
				<li>VPN — это виртуальная частная сеть, с помощью нее можно объединить несколько локальных сетей через сеть интернет. Используется в большинстве случаев для обеспечения безопасности.</li>

			</ol>
		</acomment>
	</question>
	
	<question>
		<author>
			Мещеряков Никита Сергеевич
		</author>		
		
		
		<qtext>
			Проект (Project) ​– это:
		</qtext>
		
		
		<ranswer>
			Комплекс взаимосвязанных мероприятий, направленный на создание уникального продукта или услуги в условиях временных и ресурсных ограничений. 
		</ranswer>
		
		
		<answer>
			Совокупность процессов проектирования перспективного продукта или системы. 
		</answer>
		
		
		<answer>
			Получение изображения из оптического прибора на удалённом от него экране.
		</answer>
		

		<answer>
			Изображение трёхмерной фигуры на проекционной плоскости.
		</answer>
		
		<proofrlink>
			https://yadi.sk/d/evI_RRva3Mab5W/%D0%A2%D0%B5%D1%81%D1%82%D1%8B/%D0%A2%D0%B5%D1%81%D1%82%20%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5%20%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B0%D0%BC%D0%B8%20-%20%D0%B2%D0%BE%D0%BF%D1%80%D0%BE%D1%81%D1%8B.doc
		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Meshcheryakov/index.html
		</plink>
		
	</question>
	
	<question>
		<author>
			Мирскова Елизавета Сергеевна
		</author>		
		
		
		<qtext>
			Для каждого из уровней OSI выберите соответствующую ему единицу данных:
			<table border="1">
                        <tbody><tr><th>Уровень OSI</th><th>Единица данных</th></tr>
                        <tr><td>1. Прикладной</td><td>A. Биты</td></tr>
                        <tr><td>2. Представительский</td><td>B. Сегменты</td></tr>
                        <tr><td>3. Сеансовый</td><td>C. Данные</td></tr>
                        <tr><td>4. Транспортный</td><td>D. Пакеты</td></tr>
			<tr><td>5. Сетевой</td><td>E. Кадры</td></tr>
			<tr><td>6. Канальный</td></tr>
			<tr><td>7. Физический</td></tr>
                    </tbody></table>
		</qtext>
		
		
		<ranswer>
			1 - C, 2 - C, 3 - C, 4 - B, 5 - D, 6 - E, 7 - A
		</ranswer>
		
		
		<proofrlink>
			https://ru.wikipedia.org/wiki/Сетевая_модель_OSI
		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Mirskova/index.html
		</plink>
	</question>
	
	<question>
		<author>
			Мурзайкина Олеся Анатольевна
		</author>		
		
		
		<qtext>
			VPN (англ. Virtual Private Network — виртуальная частная сеть) - это
		</qtext>
		
		
		<ranswer>
			Обобщённое название технологий, позволяющих обеспечить одно или несколько сетевых соединений (логическую сеть) поверх другой сети (например, Интернет). При этом уровень доверия к построенной логической сети не зависит от уровня доверия к базовым сетям благодаря использованию средств криптографии (шифрованию, аутентификация, инфраструктуры публичных ключей, средствам для защиты от повторов и изменения передаваемых по логической сети сообщений) .  
		</ranswer>
		
		
		<answer>
			Обобщённое название технологий, позволяющих обеспечить более двух сетевых соединений (логическую сеть) поверх другой сети (например, Интернет). При этом уровень доверия к построенной логической сети не зависит от уровня доверия к базовым сетям благодаря использованию средств криптографии (шифрованию, аутентификация, инфраструктуры публичных ключей, средствам для защиты от повторов и изменения передаваемых по логической сети сообщений) .  
		</answer>
		
		
		<answer>
			Обобщённое название технологий, позволяющих обеспечить одно или несколько сетевых соединений (логическую сеть) поверх другой сети (например, Интернет).При этом уровень доверия к построенной логической сети зависит от уровня доверия к базовым сетям, не смотря на использование средств криптографии (шифрование, аутентификация, инфраструктура публичных ключей, средства для защиты от повторов и изменения передаваемых по логической сети сообщений).
		</answer>
		
		
		<proofrlink>
			https://ru.wikipedia.org/wiki/VPN
		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Murzaykina/index.html
		</plink>
		
	</question>
	
	<question>
		<author>
			Порфирьев Александр Юрьевич
		</author>		
		
		
		<qtext>
			Сопоставьте название методологии разработки c ее определением:
			<table border="1">
                        <tbody><tr><th>Название</th><th>Определение</th></tr>
                         <tr><td>A. FDD</td><td>1. Техника разработки программного обеспечения, которая основывается на повторении очень коротких циклов разработки:
                          сначала пишется тест, покрывающий желаемое изменение, затем пишется код, который позволит пройти тест, и под конец проводится рефакторинг нового кода к соответствующим стандартам.
                         </td></tr>
                        <tr><td>B. TDD</td><td>2. Стиль разработки программного обеспечения, когда модели становятся основными
                        артефактами разработки, из которых генерируется код и другие артефакты.
                        </td></tr>
                         <tr><td>C. BDD</td><td>3. Итеративная методология разработки программного обеспечения, целью которой является разработка реального,
                         работающего программного  обеспечения систематически, в поставленные сроки.
                          </td></tr>
                           <tr><td>D. MDD</td><td>4. Разработка, основанная на функционировании ,при которой особое внимание уделяется поведению системы/модуля в терминах бизнеса(заказчика).</td></tr>
                         </tbody></table>
		</qtext>
		
		
		<ranswer>
			А-3 B-1 С-4 D-2
		</ranswer>
	
		<proofrlink>
			https://yadi.sk/d/evI_RRva3Mab5W
		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Porfirev/index.html
		</plink>
		
	</question>
	<question>
		<author>
			Прокопьев Максим Эдуардович
		</author>		
		
		
		<qtext>
			Выберете вариант в котором указаны особенности относящиеся к протоколу TCP и не относящиеся к протоколу UDP
		</qtext>
		
		
		<ranswer>
			Решает проблемы с надежностью, дублированием, порядком пакетов
		</ranswer>
		
		
		<answer>
			Не требует заранее установленного соединения
		</answer>
		
		
		<answer>
			Является протоколом транспортного уровня
		</answer>
		
		
		<answer>
			Выгодно использовать для серверов, отвечающих на небольшие запросы от огромного числа клиентов
		</answer>
		
		
		<proofrlink>
			https://ru.wikipedia.org/wiki/Transmission_Control_Protocol
		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Prokopiev/index.html
		</plink>
	</question>

	<question>
		<author>
			Селин Николай Сергеевич
		</author>		
		
		
		<qtext>
			Какая реальная битовая скорость FastEthernet (100BASE-TX)? Почему так?
		</qtext>
		
		
		<ranswer>
			125
		</ranswer>
		
		
		<answer>
			100	
		</answer>
		
		
		<answer>
			75
		</answer>
		
		
		<answer>
			12.5
		</answer>
		
		
		<proofrlink>
			http://citforum.ru/nets/lvs/glava_5.shtml
		</proofrlink>
		
		<acomment>
			Ethernet заимствует у FDDI метод кодирования 4B/5B, когда любые четыре бита MAC-подуровня представляются пятью физическими битами с чередующимися нулями и единицами. Для чего это делается — уже глубокая физика. 
При этом исходные данные должны передаваться со скоростью 100 Мб/с согласно стандарту Ethernet. Из-за этого избыточного бита действительная скорость на 25% больше (5 больше 4 на 25%), что составляет, разумеется, 125 Мб/c.
		</acomment>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Selin/index.html
		</plink>
		
	</question>
	
	<question>
		<author>
			Смирнова Ирина Александровна
		</author>		
		
		
		<qtext>
			Методология разработки TDD ( test-driven development ):
		</qtext>
		
		
		<ranswer>
			Техника разработки программного обеспечения, которая основывается на повторении очень коротких циклов разработки: сначала пишется тест, покрывающий желаемое изменение, затем пишется код, который позволит пройти тест, и под конец проводится рефакторинг нового кода к соответствующим стандартам.
		</ranswer>
		
		
		<answer>
			Представляет собой попытку объединить наиболее признанные в индустрии разработки программного обеспечения методики, принимающие за основу важную для заказчика функциональность (свойства) разрабатываемого программного обеспечения. Основной целью данной методологии является разработка реального, работающего программного обеспечения систематически, в поставленные сроки.
		</answer>
		
		
		<answer>
			Это стиль разработки программного обеспечения, когда модели становятся артефактами разработки, из которых генерируется код и другие артефакты.
		</answer>
		
		
		<answer>
			Техника разработки, при которой рассматривается не результат выполнения какого-либо модуля, а та работа, которую он выполняет.
		</answer>
		
		
		<proofrlink>
			https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D0%B0_%D1%87%D0%B5%D1%80%D0%B5%D0%B7_%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5
		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Smirnova/index.html
		</plink>
		
	</question>
	<question>
		<author>
			Чащин Георгий Алексеевич
		</author>

		
		<qtext>
			Из-за какой технологии возможна атака POODLE? Как ее производят? Как ее предотвратить?
		</qtext>

		<ranswer>
			SSLv3
		</ranswer>

		<answer>
			TLSv1.0
		</answer>

		<answer>
			TLSv1.2
		</answer>

		<answer>
			SSLv2
		</answer>

		<acomment>
			В случае SSLv3, сервер не проверяет добавочные значения на изменения, а проверяет лишь их длину => злоумышленник может вытащить из блоков фиксированной длинны значение данных, которые были зашифрованы между пользователем и сервером.
Сама атака проводится в 2 этапа, сперва уровень шифрования искуственно снижается с пмощью атаки человека по середине (Man-in-the-Middle), то есть атакующий подменяет ответы сервера на отрицательные при попытке жертвы связаться с сервером при помощи зашифрованной связи. Когда клиент жертвы принимает отказ, он автоматически снижает уровень для шифрования на предыдущий, для поддержки старых серверов. Именно из-за этого можно заставить использовать клиент жертвы SSLv3
Чтобы этого избежать нужно выключить SSL3 и более старые на сервере и клиенте.
		</acomment>

		<proofrlink>
			https://www.acunetix.com/blog/articles/tls-vulnerabilities-attacks-final-part/
		</proofrlink>
				
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Chashchin/index.html
		</plink>

	</question>
	<question>
		<author>
			Штыков Александр Александрович
		</author>		
		
		
		<qtext>
			Кто НЕ входит в состав персонала ЦОД (центров обработки данных)? (Выберите ОДИН правильный ответ)
		</qtext>
		
		
		<ranswer>
			дизайнер
		</ranswer>
		
		
		<answer>
			специалист по мониторингу
		</answer>
		
		
		<answer>
			системный архитектор
		</answer>
		
		
		<answer>
			помощник генерального директора
		</answer>
		
		
		<proofrlink>
			https://stankin.github.io/inet-2017/idm-17-01/Shtykov/images/l4.ppsx
		</proofrlink>
		
		
		<plink>
			https://stankin.github.io/inet-2017/idm-17-01/Shtykov/index.html
		</plink>
		
	</question>
</exam>
